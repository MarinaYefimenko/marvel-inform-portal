{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","Component","newComicsLoading","Spinner","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","setNewComicsLoading","comicsEnded","setComicsEnded","offset","setOffset","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","comics","map","item","i","to","id","src","thumbnail","alt","title","price","renderComics","disabled","style","onClick","ComicsPage","Helmet","name","content","AppBanner","ErrorBoundary","display","width","height","objectFit","margin","img","_transformCharDescription","char","description","slice","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","a","res","results","_transformCharacter","getCharacterByName","getCharacter","path","extension","homepage","urls","wiki","items","_transformComic","getComic","comic","prices","link","pageCount","language","textObjects","state","err","errInfo","console","log","this","setState","props","children","avengers","avengersLogo"],"mappings":"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","file":"static/js/6.5d696a85.chunk.js","sourcesContent":["import { useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\n\nconst setContent  = (process, Component, newComicsLoading) => {\n    switch (process){\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newComicsLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default: throw new Error ('Unexpected process state')\n    }\n}\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\n    const [comicsEnded, setComicsEnded] = useState(false);\n    const [offset, setOffset] = useState(10);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewComicsLoading(false) : setNewComicsLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'));\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if(newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewComicsLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended)\n    }\n\n    function renderComics(arr) {\n        const comics =  arr.map((item, i) => {\n            \n            return (\n                <li className=\"comics__item\"\n                    key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price ? `${item.price} $` : 'Not available'}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {comics}\n            </ul>\n        )\n    }\n        \n// =================================================================================================\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderComics(comicsList), newComicsLoading)}\n            <button className=\"button button__main button__long\"\n                disabled={newComicsLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n    return(\r\n        <>\r\n        <Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"Page with list of our comics\"\r\n            />\r\n            <title>Comics page</title>\r\n        </Helmet>\r\n        <AppBanner/>\r\n        <ErrorBoundary>\r\n            <ComicsList/>\r\n        </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px',\r\n        height: '250px', objectFit: 'contain',\r\n        margin: '0 auto'}} src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => { \r\n   const {loading, request, error, clearError, process, setProcess} = useHttp();\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/',\r\n         _apiKey = 'apikey=6b860c1151f1f1b315a6d1dd0a7f4269',\r\n         _baseOffsetCharacters = 296,\r\n         _baseOffsetComics = 10;\r\n\r\n   const getAllCharacters = async (offset = _baseOffsetCharacters) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n     }\r\n\r\n   const getCharacterByName = async (name) => {\r\n      const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n      return res.data.results.map(_transformCharacter);\r\n  }\r\n\r\n   const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n     }   \r\n\r\n   const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? char.description : 'Description not found',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n     }\r\n\r\n   const getAllComics = async (offset = _baseOffsetComics) => {\r\n      const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformComic);\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n      return _transformComic(res.data.results[0]);\r\n   }\r\n\r\n   const _transformComic = (comic) => {\r\n      return {\r\n          id: comic.id,\r\n          title: comic.title,\r\n          price: !(comic.prices[0].price === 0) ? comic.prices[0].price : null,\r\n          thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n          link: comic.urls[0].url,\r\n          description: comic.description,\r\n          pageCount: !(comic.pageCount === 0) ? comic.pageCount : null,\r\n          language: !(comic.textObjects.length === 0) ? comic.textObjects[0].language : null\r\n      }\r\n   }\r\n\r\n     return {\r\n         loading,\r\n         error,\r\n         process,\r\n         setProcess,\r\n         getCharacter,\r\n         getCharacterByName,\r\n         getAllCharacters,\r\n         clearError,\r\n         getAllComics,\r\n         getComic\r\n      }\r\n}\r\n\r\nexport const _transformCharDescription = (char) => {\r\n   char.description = char.description.length <= 200 ? char.description : `${char.description.slice(0, 200)}...`;\r\n   return char;\r\n} \r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        \r\n        setLoading(true);\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if(!response.ok) {\r\n                throw new Error (`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setProcess('error');\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {loading, request, error, clearError, process, setProcess};\r\n}","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch (err, errInfo) {\r\n        console.log(err, errInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}