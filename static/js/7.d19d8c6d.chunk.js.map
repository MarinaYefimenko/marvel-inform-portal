{"version":3,"sources":["components/pages/SinglePage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","getComic","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","Error","setContent","ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","_transformCharDescription","char","description","length","slice","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","message","useHttp","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacterByName","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllComics","_transformComic","comic","title","price","prices","link","pageCount","language","textObjects","Skeleton","className","Spinner","AppBanner","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.d19d8c6d.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { setContent } from '../../utils/setContent';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n    const {getComic, getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData()\r\n        // eslint-disable-next-line\r\n    }, [id])\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'comic':\r\n                getComic(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                break;\r\n            case 'character':\r\n                getCharacter(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                break;\r\n            default: \r\n                throw new Error ('Missing request');\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {setContent(process, Component, data)}\r\n        </>\r\n        )\r\n}\r\n\r\nexport default SinglePage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px',\r\n        height: '250px', objectFit: 'contain',\r\n        margin: '0 auto'}} src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => { \r\n   const {loading, request, error, clearError, process, setProcess} = useHttp();\r\n\r\n   const _apiBase = 'https://gateway.marvel.com:443/v1/public/',\r\n         _apiKey = 'apikey=6b860c1151f1f1b315a6d1dd0a7f4269',\r\n         _baseOffsetCharacters = 296,\r\n         _baseOffsetComics = 10;\r\n\r\n   const getAllCharacters = async (offset = _baseOffsetCharacters) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n     }\r\n\r\n   const getCharacterByName = async (name) => {\r\n      const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n      return res.data.results.map(_transformCharacter);\r\n  }\r\n\r\n   const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n     }   \r\n\r\n   const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? char.description : 'Description not found',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n     }\r\n\r\n   const getAllComics = async (offset = _baseOffsetComics) => {\r\n      const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformComic);\r\n   }\r\n\r\n   const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n      return _transformComic(res.data.results[0]);\r\n   }\r\n\r\n   const _transformComic = (comic) => {\r\n      return {\r\n          id: comic.id,\r\n          title: comic.title,\r\n          price: !(comic.prices[0].price === 0) ? comic.prices[0].price : null,\r\n          thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n          link: comic.urls[0].url,\r\n          description: comic.description,\r\n          pageCount: !(comic.pageCount === 0) ? comic.pageCount : null,\r\n          language: !(comic.textObjects.length === 0) ? comic.textObjects[0].language : null\r\n      }\r\n   }\r\n\r\n     return {\r\n         loading,\r\n         error,\r\n         process,\r\n         setProcess,\r\n         getCharacter,\r\n         getCharacterByName,\r\n         getAllCharacters,\r\n         clearError,\r\n         getAllComics,\r\n         getComic\r\n      }\r\n}\r\n\r\nexport const _transformCharDescription = (char) => {\r\n   char.description = char.description.length <= 200 ? char.description : `${char.description.slice(0, 200)}...`;\r\n   return char;\r\n} \r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        \r\n        setLoading(true);\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if(!response.ok) {\r\n                throw new Error (`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setProcess('error');\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {loading, request, error, clearError, process, setProcess};\r\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\n\r\nexport const setContent  = (process, Component, data) => {\r\n    switch (process){\r\n        case 'waiting':\r\n            return <Skeleton/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component data={data}/>;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n        default: throw new Error ('Unexpected process state')\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}